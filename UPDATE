#!/bin/bash

TESTING=false


#get Robot Type
echo "Enter camera type (U) for UVC or (B) for Basler -fluorescence system: "
read cameratype
echo "${cameratype}" > /tmp/cameratype
cp makefile_uvc makefile
if [[ "$cameratype" == *[bB]* ]]; then

        { echo  "#define USE_BASLER 1"; cat src/controller.cpp; } > /tmp/controller.cpp
        cp makefile_basler makefile
        cp /tmp/controller.cpp src/
	make controller
fi 
 






# save working directory
WD=(pwd)

# define constants
ROOT_DIR=$(cat var/root_dir)
WEB_DIR=/var/www/html/wormbot
CGI_DIR=$ROOT_DIR/cgi-bin
GRAPHS_DIR=$ROOT_DIR/graphs
SCHEDULER_DIR=$ROOT_DIR/scheduler_parts


# handle installation directory
if [ "$#" -eq 1 ]
then
	ROOT_DIR=$1
	echo $ROOT_DIR > var/root_dir
elif [ "$#" -gt 1 ]
then
	echo "Usage: $0 [DIR]"
	exit
fi



# move necessary files to root dir
sudo cp  experimentuploader.html bulkuploader.html graphmaker.html  generate_coordinates.py bin/alignerd bin/controller wormbot_template.csv bin/master_control_program  $ROOT_DIR
sudo cp -R scheduler_parts $ROOT_DIR


# move necessary files to web dir
sudo cp -r img $WEB_DIR/img
sudo cp plateform.html $WEB_DIR
sudo cp www/html/status.html $WEB_DIR


# move necessary files to cgi-bin
sudo cp data_path bin/experimentbrowser bin/marker bin/scheduler bin/cgiccretro bin/wormlistupdater bin/backupexperiment bin/deleteexperiment bin/wormbotstatus bin/graphmaker bin/cropFrames bin/bulkuploader bin/getfilelist $CGI_DIR
sudo cp ../ffmpeg-3.4/ffmpeg $CGI_DIR
sudo cp data_path /usr/lib/cgi-bin #this is for compatibilty following security changes to move cgi bin into /wormbot


# move retrograde files to the web html retrograde directory
sudo cp -r retrograde/ /var/www/html/

# move script for wormbot in command-line
sudo cp bin/wormbot /bin




